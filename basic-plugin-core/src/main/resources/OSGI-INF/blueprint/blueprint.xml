<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:security="http://www.springframework.org/schema/security"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="
                http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0 http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd"
           default-timeout="20000"
           default-activation="lazy">

    <!-- ================================================================================================== -->
    <!-- CONFIG SETTINGS                                                                                    -->
    <!-- ================================================================================================== -->

    <cm:property-placeholder persistent-id="basic.plugin" update-strategy="reload">
        <cm:default-properties>

            <cm:property name="plugin.id" value="basic-plugin" />

            <cm:property name="bp.file.extension" value="properties" />
            <cm:property name="bp.file.mime.type" value="text/plain" />

            <cm:property name="bp.file.edit.perspective.id" value="properties.edit" />

        </cm:default-properties>
    </cm:property-placeholder>


    <!-- ================================================================================================== -->
    <!-- GENERAL INTERFACE EXPORTS                                                                          -->
    <!-- ================================================================================================== -->


    <!-- =================================== -->
    <!-- Content Types                       -->
    <!-- =================================== -->

    <service ref="bp.content.info" interface="org.pentaho.platform.api.engine.IContentInfo" activation="eager">
        <service-properties>
            <entry key="plugin-id" value="${plugin.id}" />
            <entry key="extension" value="${bp.file.extension}" />
        </service-properties>
    </service>


    <!-- =================================== -->
    <!-- Content Generators                  -->
    <!-- =================================== -->

    <!-- register a base IContentGenerator implementation to handle all files with extension 'properties'   -->
    <service ref="bp.content.generator" interface="org.pentaho.platform.api.engine.IContentGenerator" activation="eager">
        <service-properties>
            <entry key="plugin-id" value="${plugin.id}" />
            <entry key="content-type" value="${bp.file.extension}" />
        </service-properties>
    </service>

    <!-- register specific IContentGenerator implementations; this one handles the 'EDIT' action -->
    <service ref="bp.content.generator" interface="org.pentaho.platform.api.engine.IContentGenerator" activation="eager">
        <service-properties>
            <entry key="plugin-id" value="${plugin.id}" />
            <!-- the selected 'EDIT' action perspective ID gets placed as the content type -->
            <entry key="content-type" value="${bp.file.edit.perspective.id}" />
        </service-properties>
    </service>


    <!-- =================================== -->
    <!-- Static / External resources         -->
    <!-- =================================== -->


    <!-- register a IPlatformPlugin implementation -->
    <service ref="bp" interface="org.pentaho.platform.api.engine.IPlatformPlugin" activation="eager">
        <service-properties>
            <entry key="plugin-id" value="${plugin.id}" />
        </service-properties>
    </service>


    <!-- =================================== -->
    <!-- Alternate Static Resources          -->
    <!-- =================================== -->

    <!-- HttpService Whiteboard registration of web assets -->
    <service id="bp.whiteboard.service" interface="org.ops4j.pax.web.extender.whiteboard.ResourceMapping">
        <bean class="org.ops4j.pax.web.extender.whiteboard.runtime.DefaultResourceMapping">
            <!-- this translates to /osgi/<ALIAS>/<STATIC_RESOURCE> -->
            <property name="alias" value="/alternate/basic-plugin/resources"/>
            <property name="path" value="/resources"/>
        </bean>
    </service>


    <!-- ================================================================================================== -->
    <!-- GENERAL BEAN DECLARATIONS                                                                          -->
    <!-- ================================================================================================== -->

    <!-- =================================== -->
    <!-- Content Generators                  -->
    <!-- =================================== -->

    <!-- IContentGenerator implementation -->
    <bean id="bp.content.generator" class="pt.webdetails.basic.plugin.BasicPluginContentGenerator" />


    <!-- =================================== -->
    <!-- Content Types                       -->
    <!-- =================================== -->


    <bean id="bp.content.info" class="pt.webdetails.basic.plugin.platform.extensions.ContentInfoExtended">

        <!-- the file extension we'll become responsible for -->
        <property name="extension" value="${bp.file.extension}" />

        <!-- the mimeType -->
        <property name="mimeType" value="${bp.file.mime.type}" />

        <!-- the set of available operations for this file extension -->
        <property name="operations">

            <list value-type="org.pentaho.platform.api.engine.IPluginOperation">

                <!-- 'OPEN' action -->
                <bean class="org.pentaho.platform.engine.core.solution.PluginOperation">
                    <argument value="RUN" />
                    <!-- no perspective set: defaults to 'generatedContent' -->
                </bean>

                <!-- 'EDIT' action -->
                <bean class="org.pentaho.platform.engine.core.solution.PluginOperation">
                    <argument value="EDIT" />
                    <!-- set a perspective ( maps to: 'content-type' service property ) for the 'EDIT' action -->
                    <property name="perspective" value="${bp.file.edit.perspective.id}" />
                </bean>

            </list>
        </property>
    </bean>


    <bean id="bp" class="pt.webdetails.basic.plugin.platform.extensions.PlatformPluginExtended">
        <property name="id" value="${plugin.id}" />

        <!-- =================================== -->
        <!-- Static Resources                    -->
        <!-- =================================== -->

        <property name="staticResourceMap">
            <map key-type="java.lang.String" value-type="java.lang.String">

                <!-- this translates to /api/repos/basic-plugin/<LOCAL_FOLDER>/<STATIC_RESOURCE> -->
                <entry key="/basic-plugin/resources" value="resources" />
            </map>
        </property>

        <!-- =================================== -->
        <!-- External Resources                  -->
        <!-- =================================== -->

        <property name="externalResourcesMap">
            <map key-type="java.lang.String" value-type="java.util.List">

                <entry key="mantle">
                    <list value-type="java.lang.String">
                        <value>api/repos/basic-plugin/resources/basic-plugin-startup.js</value>
                    </list>
                </entry>

            </map>
        </property>
    </bean>

</blueprint>
